name: Cache and Install Dependencies

on:
  # Allows the workflow to be triggered by another workflow with inputs
  workflow_call:
    inputs:
      node-version:
        description: "The version of Node to install"
        required: true
        type: string
        default: "latest" # Default Node version if none is provided
      lock-file:
        description: "The path to the lock file for caching"
        required: true
        type: string
        default: "package-lock.json" # Default lock file if none is provided
      cache-path:
        description: "The path to the cache directory"
        required: true
        type: string
        default: "node_modules" # Default cache path if none is provided
      cache-key-prefix:
        description: "Prefix for the cache key"
        required: true
        type: string
        default: "node" # Default cache key prefix if none is provided
      working-directory:
        description: "Working directory path"
        required: true
        type: string
        default: "." # Default working directory if none is provided

  # Allows manual triggering of the workflow from the GitHub Actions UI
  workflow_dispatch:
    inputs:
      node-version:
        description: "The version of Node to install"
        required: true
        type: string
        default: "latest" # Default Node version if none is provided
      lock-file:
        description: "The path to the lock file for caching"
        required: true
        type: string
        default: "package-lock.json" # Default lock file if none is provided
      cache-path:
        description: "The path to the cache directory"
        required: true
        type: string
        default: "node_modules" # Default cache path if none is provided
      cache-key-prefix:
        description: "Prefix for the cache key"
        required: true
        type: string
        default: "node" # Default cache key prefix if none is provided
      working-directory:
        description: "Working directory path"
        required: true
        type: string
        default: "." # Default working directory if none is provided

jobs:
  cache-install-dependencies:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code from the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Setup Node environment with the specified version
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs['node-version'] }} # Use the specified Node version

      # Restore cached modules based on the lock file hash
      - name: Restore modules Cache
        uses: actions/cache@v3
        with:
          path: ${{ inputs['cache-path'] }} # Path for the cache directory
          # Unique cache key based on lock file hash
          # This key is based on the hash of the package-lock.json file.
          # If dependencies change, the hash will change and a new cache will be created.
          key: ${{ runner.os }}-${{ inputs['cache-key-prefix'] }}-${{ hashFiles(inputs['lock-file']) }}
          # Restore from the fallback cache if the exact key is not found
          # If the exact key isn't found, the runner will attempt to restore from these fallback keys.
          restore-keys: ${{ runner.os }}-${{ inputs['cache-key-prefix'] }}-

      # Install dependencies using npm ci
      - name: Install Dependencies
        run: npm ci
        working-directory: ${{ inputs['working-directory'] }} # Run in the specified working directory

      # Save the modules cache for future use
      - name: Save modules Cache
        uses: actions/cache@v3
        with:
          path: ${{ inputs['cache-path'] }} # Path for the cache directory
          key: ${{ runner.os }}-${{ inputs['cache-key-prefix'] }}-${{ hashFiles(inputs['lock-file']) }} # Cache key based on lock file hash
